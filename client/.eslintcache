[{"/Users/jspry/Desktop/Personal-Projects/weather-recorder-2.0/client/src/Components/LineGraphContainer.js":"1"},{"size":2633,"mtime":1612365862000,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1313jdi","/Users/jspry/Desktop/Personal-Projects/weather-recorder-2.0/client/src/Components/LineGraphContainer.js",["7","8","9","10","11","12","13"],"import React from \"react\";\n\n// import components\nimport { LineGraph } from './LineGraph';\n\nexport class LineGraphContainer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: null,\n\t\t\tlabels: []\n\t\t}\n\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('LineGraphContainer componentDidMount')\n\t\tfetch(\"http://ec2-3-140-190-252.us-east-2.compute.amazonaws.com/weather-bristol\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\n\t\t\t\tlet dayTemps = data.rows.map((item, index) => {\n\t\t\t\t\treturn item.DayTemp;\n\t\t\t\t})\n\t\t\t\tlet dates = data.rows.map((item, index) => {\n\t\t\t\t\tlet ts = new Date(item.Timestamp*1000)\n\t\t\t\t\tlet dateObject = ts.toLocaleString();\n\t\t\t\t\tlet formattedDate = dateObject.substring(0, dateObject.length-13)\n\t\t\t\t\tconsole.log(formattedDate)\n\t\t\t\t\tlet day = dateObject.toLocaleString(\"en-US\", {day: \"numeric\"}) // 9\n\t\t\t\t\tlet month = dateObject.toLocaleString(\"en-US\", {month: \"numeric\"}) // 2019 \n\t\t\t\t\tlet year = dateObject.toLocaleString(\"en-US\", {year: \"numeric\"}) // 2019 \n\t\t\t\t\treturn  formattedDate.toLocaleString();\n\t\t\t\t})\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: data.rows,\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tdata: dayTemps, \n\t\t\t\t\t\tlabel: 'Bristol',\n\t\t\t\t\t\tborderColor: 'mediumseagreen',\n\t\t\t\t\t\tlineTension: 0,\n\t\t\t\t\t\tbackgroundColor: 'transparent'\n\t\t\t\t\t}],\n\t\t\t\t\tlabels: dates\n\t\t\t\t})\n\t\t\t\tconsole.log('this.state', this.state)\t\t\t\t\n\t\t\t})\n\t\t\tfetch(\"http://ec2-3-140-190-252.us-east-2.compute.amazonaws.com/weather-london\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\n\t\t\t\tlet dayTemps = data.rows.map((item, index) => {\n\t\t\t\t\treturn item.DayTemp;\n\t\t\t\t})\n\t\t\t\tlet dates = data.rows.map((item, index) => {\n\t\t\t\t\tlet ts = new Date(item.Timestamp*1000)\n\t\t\t\t\tlet dateObject = ts.toLocaleString();\n\t\t\t\t\tlet formattedDate = dateObject.substring(0, dateObject.length-13)\n\t\t\t\t\tconsole.log(formattedDate)\n\t\t\t\t\tlet day = dateObject.toLocaleString(\"en-US\", {day: \"numeric\"}) // 9\n\t\t\t\t\tlet month = dateObject.toLocaleString(\"en-US\", {month: \"numeric\"}) // 2019 \n\t\t\t\t\tlet year = dateObject.toLocaleString(\"en-US\", {year: \"numeric\"}) // 2019 \n\t\t\t\t\treturn  formattedDate.toLocaleString();\n\t\t\t\t})\n\n\t\t\t\t// this.setState({\n\t\t\t\t// \tdatasets: [{data: dayTemps, label: 'London'}]\n\t\t\t\t// })\n\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tdatasets: [...prevState.datasets, {\n\t\t\t\t\t\tdata: dayTemps,\n\t\t\t\t\t\tlabel: 'London',\n\t\t\t\t\t\tborderColor: 'coral',\n\t\t\t\t\t\tlineTension: 0,\n\t\t\t\t\t\tbackgroundColor: 'transparent'\n\t\t\t\t\t}]\n\t\t\t\t}))\n\n\n\t\t\t\tconsole.log('this.state', this.state)\t\t\t\t\n\t\t\t})\n\t}\n\trender(){ \n\t\treturn (\n\t\t\tthis.state.data === null ?\n\t\t\t<p>Fetching data</p>\n\t\t\t:\n\t\t\t<LineGraph data={this.state} width={400} height={300} />\t\n\t\t)\n\t}\n}\n",{"ruleId":"14","severity":1,"message":"15","line":30,"column":10,"nodeType":"16","messageId":"17","endLine":30,"endColumn":13},{"ruleId":"14","severity":1,"message":"18","line":31,"column":10,"nodeType":"16","messageId":"17","endLine":31,"endColumn":15},{"ruleId":"14","severity":1,"message":"19","line":32,"column":10,"nodeType":"16","messageId":"17","endLine":32,"endColumn":14},{"ruleId":"14","severity":1,"message":"20","line":56,"column":9,"nodeType":"16","messageId":"17","endLine":56,"endColumn":14},{"ruleId":"14","severity":1,"message":"15","line":61,"column":10,"nodeType":"16","messageId":"17","endLine":61,"endColumn":13},{"ruleId":"14","severity":1,"message":"18","line":62,"column":10,"nodeType":"16","messageId":"17","endLine":62,"endColumn":15},{"ruleId":"14","severity":1,"message":"19","line":63,"column":10,"nodeType":"16","messageId":"17","endLine":63,"endColumn":14},"no-unused-vars","'day' is assigned a value but never used.","Identifier","unusedVar","'month' is assigned a value but never used.","'year' is assigned a value but never used.","'dates' is assigned a value but never used."]